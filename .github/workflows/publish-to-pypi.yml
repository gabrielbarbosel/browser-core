name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Setup do Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Atualizar a versão no pyproject.toml
        run: |
          # Extrai o nome da tag (ex: 'v0.2.5') da referência completa (refs/tags/v0.2.5)
          TAG_VERSION=${GITHUB_REF_NAME}
          echo "Atualizando pyproject.toml para a versão ${TAG_VERSION}"
          # Usa sed para substituir a linha da versão
          sed -i "s/^version = \".*\"/version = \"${TAG_VERSION}\"/" pyproject.toml

      - name: Commit e Push da versão atualizada
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          # Mensagem de commit indicando a versão, com [skip ci] para evitar loops
          git commit -m "chore(release): update version to ${{ github.ref_name }} [skip ci]"
          # Empurra a alteração para a branch master
          git push origin master

      - name: Instalar dependências e construir o pacote
        run: |
          python -m pip install --upgrade pip build twine
          python -m build

      - name: Publicar no PyPI
        uses: pypa/gh-action-pypi-publish@release/v1